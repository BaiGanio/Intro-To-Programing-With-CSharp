using System;

namespace MulticastDelegate
{
    /*
     * Multicast delegate references to more than one function.
     * + or += register method with delegate
     * - or -= unregister method with delegate
     */
    public delegate void SimpleDelegate();
    public delegate int SimpleDelegateOne();
    public delegate void SimpleDelegateTwo(out int someNum);
    class Program
    {
        static void Mains( )
        {
            SimpleDelegate del = new SimpleDelegate(SimpleMethodA);
            /* Register the method in the delegate */
            del += SimpleMethodB;
            del += SimpleMethodC;

            /* Invoke multicast delegate */
            del();
            Console.WriteLine("--------------------------------");

            /* We can unregister method */
            del -= SimpleMethodA;

            del();

            Console.WriteLine("============================");

            SimpleDelegateOne del1 = new SimpleDelegateOne(SimpleMethodD);
            del1 += SimpleMethodE;

            int delegateReturnedValue = del1();
            /* Notice that the returned value will be the value from the last function in the evocation list */
            Console.WriteLine(delegateReturnedValue);

            Console.WriteLine("============================");

            SimpleDelegateTwo del2 = new SimpleDelegateTwo(SimpleMethodF);
            del2 += SimpleMethodG;

            int delegateOutputParameterValue = -1;
            del2(out delegateReturnedValue);
            /* Notice that the returned value will be the value from the last function in the evocation list */
            Console.WriteLine("Output parameter {0}", delegateReturnedValue);

        }

        public static void SimpleMethodA()
        {
            Console.WriteLine("SimpleMethodA() Invoked!");
        }
        public static void SimpleMethodB()
        {
            Console.WriteLine("SimpleMethodB() Invoked!");
        }
        public static void SimpleMethodC()
        {
            Console.WriteLine("SimpleMethodC() Invoked!");
        }
        public static int SimpleMethodD()
        {
            return 10;
        }
        public static int SimpleMethodE()
        {
            return 100;
        }
        public static void SimpleMethodF(out int number)
        {
            number = 13;
        }
        public static void SimpleMethodG(out int number)
        {
            number =  101;
        }
    }



}
